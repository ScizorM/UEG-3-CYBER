//bridge-file-version: #36
{
	"format_version": "1.10.0",
	"animation_controllers": {
		"controller.animation.crouchdetect": {
			"initial_state": "default",
			"states": {
				"default": {
					"on_entry": [
						"/tag @s remove sneaking"
					],
					"transitions": [
						{
							"crouching": "query.is_sneaking == true"
						}
					]
				},
				"crouching": {
					"transitions": [
						{
							"default": "query.is_sneaking == false"
						}
					],
					"on_entry": [
						"/tag @s add sneaking",
						"/function sneak_functions",
						"/xp -1L @s[lm=1]"
					]
				}
			}
		},
		"controller.animation.xpdetect": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"xp_lvl1": "query.player_level >= 1"
						}
					]
				},
				"xp_lvl1": {
					"on_exit": [
						"/tag @s remove ability_ready"
					],
					"on_entry": [
						"/tag @s add ability_ready",
						"/playsound ability_charged"
					],
					"transitions": [
						{
							"default": "query.player_level == 0"
						}
					]
				}
			}
		},
		"controller.animation.parrying": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"parrying": "query.is_illager_captain == true"
						}
					]
				},
				"parrying": {
					"transitions": [
						{
							"default": "query.is_illager_captain == false"
						}
					],
					"on_entry": [
						"/tag @s add parrying"
					],
					"on_exit": [
						"/tag @s remove parrying"
					]
				}
			}
		},
		"controller.animation.blindEffect": {
			"states": {
				"default": {
					"transitions": [
						{
							"blinded": "query.is_baby == true"
						}
					]
				},
				"blinded": {
					"transitions": [
						{
							"default": "query.is_baby == false"
						}
					],
					"on_entry": [
						"/function blinded"
					]
				}
			},
			"initial_state": "default"
		},
		"controller.animation.boat_detect": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"riding": "query.is_riding == true"
						}
					]
				},
				"riding": {
					"transitions": [
						{
							"default": "query.is_riding == false"
						}
					]
				}
			}
		},
		"controller.animation.fall_triggers": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"fall": "query.is_shaking"
						}
					]
				},
				"fall": {
					"transitions": [
						{
							"default": "query.is_shaking == false"
						}
					],
					"on_entry": [
						"/particle sm:explosion_ring",
						"@s sm:remove_fall_event"
					]
				}
			}
		},
		"controller.animation.meleeDetect": {
			"initial_state": "default",
			"states": {
				"default": {
					"transitions": [
						{
							"punching": "variable.attack_time > 0"
						}
					]
				},
				"punching": {
					"on_entry": [
						"/function swing_functions"
					],
					"transitions": [
						{
							"default": "variable.attack_time == 0"
						}
					]
				}
			}
		}
	}
}